# Generated by Django 6.0a1 on 2025-10-08 14:03

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Название города',
                'verbose_name_plural': 'Названия городов',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CountryOfConsignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('state_flag', models.ImageField(blank=True, null=True, upload_to='flag/', verbose_name='Государственный флаг')),
            ],
            options={
                'verbose_name': 'Название страны',
                'verbose_name_plural': 'Названия стран',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Язык')),
                ('level', models.CharField(choices=[('A1', 'начальный'), ('A2', 'элементарный'), ('B1', 'средний'), ('B2', 'выше среднего'), ('C1', 'продвинутый'), ('C2', 'профессиональный')], default='A1', max_length=2, verbose_name='уровень')),
            ],
            options={
                'verbose_name': 'Иностранный язык',
                'verbose_name_plural': 'Иностранные языки',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SupplementProfession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Специализация',
                'verbose_name_plural': 'Специализации',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='resume_app.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организации',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('supplement_the_profession_of_the_user', models.ManyToManyField(related_name='supplement_profession', to='resume_app.supplementprofession')),
            ],
            options={
                'verbose_name': 'Профессия',
                'verbose_name_plural': 'Профессии',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user_s_photo/', verbose_name='Собственное изображение')),
                ('biological_sex', models.CharField(blank=True, choices=[('', '— Не выбран —'), ('F', 'женский'), ('M', 'мужской')], max_length=1, null=True, verbose_name='Пол')),
                ('patronymic', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('the_level_of_professionalism', models.CharField(blank=True, choices=[('', '— Нет никакого —'), ('LR', 'ученик'), ('BR', 'начинающий'), ('LL', 'небольшой опыт'), ('EX', 'опыт есть'), ('PR', 'профессионал'), ('SP', 'супер-профессионал'), ('HB', 'хобби')], max_length=2, null=True, verbose_name='Уровень профессионализма')),
                ('motto', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Мой девиз')),
                ('about_me', models.TextField(blank=True, null=True, verbose_name='Обо мне')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='resume_app.city', verbose_name='Город')),
                ('citizenship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='resume_app.countryofconsignment', verbose_name='Гражданство')),
                ('languages', models.ManyToManyField(blank=True, related_name='knowledge_of_foreign_languages', to='resume_app.language', verbose_name='Знание языков')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='resume_app.organization', verbose_name='Текущее место работы')),
                ('profession', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='resume_app.profession', verbose_name='Профессия')),
                ('specialization_professions', models.ManyToManyField(blank=True, related_name='supplement_user', to='resume_app.supplementprofession', verbose_name='Специализация')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
